###kubectl create configmap --dry-run vvv --from-file=default.conf --output yaml | tee somename.yaml
apiVersion: v1
data:
  default.conf: |
    server {
        listen 80;
        index index.php index.html;
        root /usr/share/nginx/html;

        location / {
            try_files $uri /index.php?$args;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass localhost:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }
kind: ConfigMap
metadata:
  name: vvv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 5
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: php
        image: php:7.3-fpm-alpine
        volumeMounts:
        - mountPath: /usr/share/nginx/html/
          name: hp
#        ports:
#        - containerPort: 9000
      - name: nginx
        image: nginx
        volumeMounts:
        - mountPath: /usr/share/nginx/html/
          name: config
        - mountPath: /etc/nginx/conf.d/
          name: config1
      volumes:
      - name: hp
        hostPath:
          path: /www
      - name: config
        configMap:
          name: nginx-index
          items:
            - key: index.html
              path: index.html
      - name: config1
        configMap:
          name: vvv # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: default.conf
              path: default.conf
      - name: config3
        configMap:
          name: php
          items:
            - key: index.php
              path: index.php
---
apiVersion: v1
kind: Service
metadata:
  name: my-nodeport-service
spec:
  selector:
    app: nginx
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30036
    protocol: TCP
